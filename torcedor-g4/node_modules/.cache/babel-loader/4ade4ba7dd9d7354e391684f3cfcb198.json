{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clayl\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\G4FlexFrontEnd\\\\torcedor-g4\\\\src\\\\App.js\";\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport React from 'react';\nimport history from './history';\nimport Login from './login/index';\nimport Torcida from './torcedores/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const token = localStorage.getItem('token');\n\n  const PrivateRoute = _ref => {\n    let { ...rest\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => token ? /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/torcedores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  };\n\n  function CustomRoute(_ref2) {\n    _s();\n\n    let {\n      isPrivate,\n      ...rest\n    } = _ref2;\n    const {\n      loading,\n      authenticated\n    } = useContext(Context); // chama a page de autenticação\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this); // se tiver carregando chama h1\n    }\n\n    if (isPrivate && !authenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this); // se for diferente de login desloga e retorna pra page web Login\n    }\n\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  _s(CustomRoute, \"K7L8vDiGMJJOSrBuKk80XDn/aSw=\");\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(CustomRoute, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CustomRoute, {\n        path: \"/torcedores\",\n        element: /*#__PURE__*/_jsxDEV(Torcida, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/clayl/OneDrive/Área de Trabalho/G4FlexFrontEnd/torcedor-g4/src/App.js"],"names":["BrowserRouter","Route","Routes","Navigate","React","history","Login","Torcida","App","token","localStorage","getItem","PrivateRoute","rest","props","CustomRoute","isPrivate","loading","authenticated","useContext","Context"],"mappings":";AAAA,SAAQA,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,QAAtC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAKA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAMC,YAAY,GAAG;AAAA,QAAC,EAAE,GAAGC;AAAL,KAAD;AAAA,wBACnB,QAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,IACNL,KAAK,gBACH,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADG,gBAGH,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,YADmB;AAAA,GAArB;;AAYA,WAASM,WAAT,QAA6C;AAAA;;AAAA,QAAxB;AAAEC,MAAAA,SAAF;AAAa,SAAGH;AAAhB,KAAwB;AAC3C,UAAM;AAAEI,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA6BC,UAAU,CAACC,OAAD,CAA7C,CAD2C,CACa;;AAExD,QAAIH,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP,CADW,CACiB;AAC7B;;AAED,QAAID,SAAS,IAAI,CAACE,aAAlB,EAAiC;AAC/B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP,CAD+B,CACC;AACjC;;AAED,wBAAO,QAAC,KAAD,OAAWL;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA1BY,KAcJE,WAdI;;AA2Bb,sBAEA,QAAC,aAAD;AAAA,2BACU,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,OAAjB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,aAAlB;AAAgC,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,UAFA;AAgBD;;KA3CQG,G;AA4CT,eAAeA,GAAf","sourcesContent":["import {BrowserRouter ,Route, Routes, Navigate} from 'react-router-dom';\nimport React from 'react';\nimport history from './history';\n\n\n\n\nimport Login from './login/index';\nimport Torcida from './torcedores/index';\n\nfunction App() {\n  const token = localStorage.getItem('token');\n  const PrivateRoute = ({ ...rest}) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? (\n          <Navigate replace to=\"/torcedores\" />\n        ) : (\n          <Navigate replace to=\"/\" />\n        )\n      }\n    />\n  );\n  function CustomRoute({ isPrivate, ...rest }) {\n    const { loading, authenticated } = useContext(Context); // chama a page de autenticação\n  \n    if (loading) {\n      return <h1>Loading...</h1>; // se tiver carregando chama h1\n    }\n  \n    if (isPrivate && !authenticated) {\n      return <Redirect to=\"/login\" /> // se for diferente de login desloga e retorna pra page web Login\n    }\n  \n    return <Route {...rest} />; \n  }\n  return(\n   \n  <BrowserRouter>\n            <Routes history={history}>\n              <CustomRoute path=\"/\" element={<Login/>} />\n              <CustomRoute path=\"/torcedores\" element={<Torcida/>} />\n                {/* <PrivateRoute path=\"/\" element={<Login/>}> </PrivateRoute>   \n                <Route path=\"/\" element={<Login/>} /> \n                {token && <Route path=\"/torcedores\" element={<Torcida/>} />} \n                <Route path=\"*\" element={<Login/>} /> */}\n            </Routes>\n  </BrowserRouter>\n      \n        \n          )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}